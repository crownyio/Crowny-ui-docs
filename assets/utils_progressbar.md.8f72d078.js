var g=Object.defineProperty,_=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var m=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var u=(s,a,n)=>a in s?g(s,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[a]=n,r=(s,a)=>{for(var n in a||(a={}))m.call(a,n)&&u(s,n,a[n]);if(l)for(var n of l(a))y.call(a,n)&&u(s,n,a[n]);return s},i=(s,a)=>_(s,h(a));import{_ as b,r as v,j as f,h as q,o as p,c as e,b as k,F as w,k as x,n as T,d as C,t as P,p as S,g as I,f as V,a as d}from"./app.d6f96533.js";const M={name:"Progressbar",setup(){const s=[],a=v({steps:[{label:"Welcome",icon:"Crown"},{label:"Company details",icon:"Company"},{label:"Loyalty program",icon:"Rewards"},{label:"Summary",icon:"TransactionHistory"}],active:2});f(()=>{for(let t=0;t<a.active;t++)setTimeout(()=>{s[t].classList.add("is-complete")},500*t)});const n=t=>{!t||s.push(t)};return i(r({},q(a)),{step:s,setCompleted:n})}},N=s=>(S("data-v-0e4bf384"),s=s(),I(),s),L={class:"wrapper"},$={class:"crowny__progress"},A=N(()=>k("div",{class:"crowny__progress__bar"},null,-1));function D(s,a,n,t,H,F){return p(),e("div",L,[k("ul",$,[(p(!0),e(w,null,x(s.steps,(o,c)=>(p(),e("li",{ref_for:!0,ref:s.active>c?t.setCompleted:"",class:T(["crowny__progress__step",[{"is-active":c===s.active},`icon-${o.icon}`]]),key:o},[A,C(" "+P(o.label),1)],2))),128))])])}var R=b(M,[["render",D],["__scopeId","data-v-0e4bf384"]]);const B=d('<h1 id="progressbar" tabindex="-1">Progressbar <a class="header-anchor" href="#progressbar" aria-hidden="true">#</a></h1><h2 id="multi-step-progressbar" tabindex="-1">Multi-step progressbar <a class="header-anchor" href="#multi-step-progressbar" aria-hidden="true">#</a></h2><p>Display this multi-step progressbar when a user is busy in any flow...</p><h4 id="preview" tabindex="-1">Preview <a class="header-anchor" href="#preview" aria-hidden="true">#</a></h4>',4),j=d(`<h4 id="mockup" tabindex="-1">Mockup <a class="header-anchor" href="#mockup" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">statusClass</th><th style="text-align:left;">Description</th><th style="text-align:left;">Usage</th></tr></thead><tbody><tr><td style="text-align:left;">is-active</td><td style="text-align:left;">This will highlight the current active step</td><td style="text-align:left;"><code>class=&quot;is-active&quot;</code></td></tr><tr><td style="text-align:left;">is-completed</td><td style="text-align:left;">This will highlight the completed step(s)</td><td style="text-align:left;"><code>class=&quot;is-completed&quot;</code></td></tr></tbody></table><p>The <code>iconName</code> can be replaced with any of our icons in our Icon-Pack</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress__step {{ iconName }} {{ statusClass }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress__bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> 
        Label here
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Because of the nature of the progressbar HTML mockup it&#39;s impossible to make the progressbar fill it&#39;s completed steps fluently across all completed steps. <br><br> Please check the example below to fix this issue.</p></div><h4 id="vue-mockup-example" tabindex="-1">Vue Mockup (example) <a class="header-anchor" href="#vue-mockup-example" aria-hidden="true">#</a></h4><p><strong>Markup</strong></p><div class="language-html"><pre><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>
            <span class="token attr-name">:ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active &gt; i ? setCompleted : <span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress__step<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(step, i) in steps<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>step<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
                { <span class="token punctuation">&#39;</span>is-active<span class="token punctuation">&#39;</span>: i  === active },
                \`icon-\${step.icon}\`
            ]<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__progress__bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{ step.label }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span> 
</code></pre></div><p><strong>JS</strong></p><div class="language-js"><pre><code>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> step <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">steps</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;Welcome&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;Crown&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;Company details&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;Company&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;Loyalty program&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;Rewards&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;Summary&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;TransactionHistory&#39;</span><span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>          
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> state<span class="token punctuation">.</span>active<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                  step<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;is-complete&#39;</span><span class="token punctuation">)</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token operator">*</span> i<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> <span class="token function-variable function">setCompleted</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">)</span> <span class="token keyword">return</span>
          step<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">,</span>
          step<span class="token punctuation">,</span>
          setCompleted
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre></div>`,10),z='{"title":"Progressbar","description":"","frontmatter":{},"headers":[{"level":2,"title":"Multi-step progressbar","slug":"multi-step-progressbar"}],"relativePath":"utils/progressbar.md","lastUpdated":1666107065236}',E={},J=Object.assign(E,{setup(s){return(a,n)=>(p(),e("div",null,[B,V(R),j]))}});export{z as __pageData,J as default};
