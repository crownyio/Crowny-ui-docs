import{_ as c,o as s,c as t,p as l,e as u,b as n,f as i,a as e}from"./app.939c2002.js";const r={name:"Cards"},_=a=>(l("data-v-0aee8cfd"),a=a(),u(),a),d={class:"wrapper"},k=_(()=>n("ul",{class:"crowny__tooltip__menu"},[n("li",null,"Mark as read/unread"),n("li",null,"Remove notification"),n("li",null,[n("a",{href:"#"},"test")])],-1)),h=[k];function g(a,p,o,b,w,S){return s(),t("div",d,h)}var m=c(r,[["render",g],["__scopeId","data-v-0aee8cfd"]]);const f=e('<h1 id="menu-tooltip" tabindex="-1">Menu Tooltip <a class="header-anchor" href="#menu-tooltip" aria-hidden="true">#</a></h1><h2 id="menu" tabindex="-1">Menu <a class="header-anchor" href="#menu" aria-hidden="true">#</a></h2><p>The menu tooltip should show when a user clicks on a rounded button with ellipsis. The markup can be used in 2 way, combined. You can either use only use <code>&lt;li&gt;&lt;/li&gt;</code> or you can <br> use <code>&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/li&gt;</code>, both share the same styling and will behave no different.</p><h4 id="preview" tabindex="-1">Preview <a class="header-anchor" href="#preview" aria-hidden="true">#</a></h4>',4),v=e(`<h4 id="markup" tabindex="-1">Markup <a class="header-anchor" href="#markup" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__tooltip__menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Mark as read/unread<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Remove notification<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),M='{"title":"Menu Tooltip","description":"","frontmatter":{},"headers":[{"level":2,"title":"Menu","slug":"menu"}],"relativePath":"molecules/menutooltip.md","lastUpdated":1666107065223}',T={},q=Object.assign(T,{setup(a){return(p,o)=>(s(),t("div",null,[f,i(m),v]))}});export{M as __pageData,q as default};
